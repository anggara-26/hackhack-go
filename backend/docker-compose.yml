version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: hackathon_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-hackathon}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - hackathon_network
    command: mongod --auth

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hackathon_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8080
      MONGODB_URI: mongodb://${MONGO_USERNAME:-admin}:${MONGO_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-hackathon}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-https://yourdomain.com}
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    networks:
      - hackathon_network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hackathon_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    networks:
      - hackathon_network

volumes:
  mongodb_data:
    driver: local

networks:
  hackathon_network:
    driver: bridge
